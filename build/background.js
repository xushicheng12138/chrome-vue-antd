"use strict";chrome.webRequest.onBeforeSendHeaders.addListener(m,{urls:["<all_urls>"],types:["main_frame","sub_frame","xmlhttprequest"]},["blocking","requestHeaders"]);chrome.runtime.onMessage.addListener(function(e,r,n){var o=e.tabs[0];return e.action==="injectCookie"?h(e.data,o):e.action==="delCookie"?chrome.cookies.getAll({url:o.url},a=>{if(chrome.runtime.lastError)console.error(chrome.runtime.lastError);else{let s=0;a.forEach(t=>{chrome.cookies.remove({url:o.url,name:t.name},c=>{s++,l(s,a.length,o),chrome.runtime.lastError?console.error(chrome.runtime.lastError):console.log("Cookie removed:",c)})})}}):e.action==="copyAllCookie"&&chrome.cookies.getAll({url:o.url},a=>{if(chrome.runtime.lastError)console.error(chrome.runtime.lastError);else{const s=a.map(t=>({name:t.name,value:t.value}));chrome.storage.sync.get(["cookie"],async t=>{const c=t.cookie.find(i=>i.name===e.name);c.cookiesArr=s,chrome.storage.sync.set(t,()=>{console.log("Value is set:",t),n({message:"处理成功！"})})})}}),n({message:"处理成功！"}),!0});async function u(){return new Promise(e=>{chrome.storage.sync.get("usedCookie",r=>{e(r)})})}async function m(e){debugger;const r=e.requestHeaders,n=await u();debugger;return n!=null&&n.cookiesArr&&n.cookiesArr.forEach(o=>{o.type===2&&r.push({name:o.name,value:o.value})}),{requestHeaders:r}}const l=(e,r,n)=>{e===r&&chrome.tabs.reload(n.id)},h=(e,r)=>{var n=new URL(r.url);n.hostname;debugger;const o=e.map(s=>({...s,url:r.url,path:"/"}));let a=0;o.forEach(s=>{if(s.type===1||s.type===void 0){let t={name:s.name,value:s.value,url:r.url,path:"/"};chrome.cookies.set(t,c=>{console.log("Cookie is set:",c),a++,l(a,o.length,r)})}else s.type===2&&(a++,l(a,o.length,r))})};
